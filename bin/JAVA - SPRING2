בס"ד

Spring will help us write complex java applications

1.object factory - a means for creating objects for us
2. the objects are managed by Spring in a container - context
3. managed objects are called managed Beans

ספרינג זו בעצם תשתית שעוזרת לנו ליצור אובייקטים בצורה מאוד מתוחכמת במיוחד ל אפליקציות דפדפן.
ספרינג זו תשתית שכתובה בשפת ג'אוה בשביל פיתוח אפליקציות בג'אוה.
וכבר בפנים כוללת כל מני design patterns וצורות נכונות של כתיבה של הקוד באופן שיוריד מהמתכנת הרבה מהעומס

*******************
תלויות -  Dependencies
נקרא גם - helper class
קלאס אחד שמוכל בתוף קלאס אחר,אובייקט אחד שמוכל בתוך אובייקט אחר
*******************

מעבר לזה ספרינג גם מבצעת עבורנו את כל העבודה של jdbc, עבודה מול ה -DB מול ה - data base שבעצם מוריד מאיתנו הרבה עבודה
וגם את כל האובייקטים שנדרשים מאיתנו עבור עבודה של web - כמו למשל servlet וכל ה design patterns של ה MVC - בעצם שרת ולקוח ומה שמחבר ביניהם אז ספרינג עושה חוץ מה view את הכל
model- המוח של המערכת - בעצם ה coupon system
view- קוד שכתוב לקליינט בשפת html
controller-מה שמחבר ביניהם
אז בעצם בעבר כל העבודה הזו הייתה מסובכת אבל היום בימינו עם ספרינג זה יותר קל והרבה דברים ספרינג עושה לנו בעצמה

ספרינג עושה עבורנו שלושה דברים :
1. מייצרת עבורנו אובייקטים ומנהלת אותם
2. עבודה מול jdbc- כל העבודה מול ה db , מול data
3. כל הנושא של MVC או web, כל הרכיבים שנצטרך עבור web applications.


***********************************************************************************************************
לספרינג שלושה מודולים בסיסיים ביותר : 
1.Beans
2.Core
3.Context 
מרגע שיש לנו אותם אנחנו יכולים לעשות object factory , לייצר אובייקטים , ולעשות DI-תלויות

אפליקציית Spring בסיסית - חייב את השלוש dependencies האלה : 
כל ה dependencies האלה נשמרים במחשב כ jar
כשעושים export למישהו לפרוייקט , נותנים אותו בלי ה jar-ים ולכן הפרוייקט נורא קטן כי יש בו רק טקסט

<!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-context</artifactId>
    <version>5.3.4</version>
</dependency>

<!-- https://mvnrepository.com/artifact/org.springframework/spring-core -->
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-core</artifactId>
    <version>5.3.4</version>
</dependency>

<!-- https://mvnrepository.com/artifact/org.springframework/spring-beans -->
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-beans</artifactId>
    <version>5.3.4</version>
</dependency>
***********************************************************************************************************




הדבר העיקרי והבסיסי ביותר  שספרינג עושה-משמשת עבורנו איזה שהוא תשתית, איזה שהוא מנוע שמייצר עבורנו אובייקטים 
באפליקציות דפדפן יש כמות די גדולה של אובייקטים מכל מני סוגים, שיש להם כל מני תפקידים, בעצם אובייקטים מכל מני שכבות של האפליקציה, ואנחנו 
צריכים מערכתשתיקח על עצמה אחריות על ייצור האובייקטים ובנייה של האוסייקטים כדי שאנחנו לא נתעסק בזה
spring container - context מבחינת האובייקט זה אובייקט 
actually this is the object that checks the configuration files - xml or some else file , and
checks what Beans, what Objects the context will create for us.Then, basically we have all the app objects in that 
context.
we will not create the objects with the new keyword , we will define the components, and will use the container
to get that Beans/objects.to get them and work with them.
בעצם זאת תשתית שתייצר בשבילנו את האובייקטים




applicationContext.xml - this file is inform the spring context what beans it will have.
ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("applicationContext.xml"); 
בעצם הסטרינג שבסוגריים זה שם של קובת שנמצא על ה root, על ה classPath


**************************** XML ***************************************************************************

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

!!!  כאן יוגדרו כל ה Beans שאנחנו רוצים שספרינג תייצר לנו   !!!

prototype- אב טיפוס 
important comment** - when we define a bean - by default it is singleton, but there is a way also 
to make it prototype


</beans> 
************************************************************************************************************


Spring Bean - An object that is managed by Spring Context.

@component -  Making a *class* so as to tell Spring to create and manage from that class, one bean(in case of singleton) or many beans (in case of prototype).
סימון ששמים על מחלקה שאנחנו רוצים שספרינג תייצר ממנה  בין או כמה בינים

@Bean - making a factory method so as to tell Spring to create and manage from that class, one bean(in case of singleton) or many beans (in case of prototype).

@Autowired - סימון של
• שדה
• פרמטר בבנאי
• פרמטר במתודה
 ככזה שנרצה ש spring תזריק )תבצע אליו השמה( מתוך מאגר ה beans שלרשותה. מציאת ההתאמה
לפי סדר החיפוש הבא:
1 .type – אם יש bean אחת בלבד מה type המתאים אז זאת התאמה. אם אין בכלל, נזרקת
שגיאה,אם יש יותר עוברים ל 2
2 .qualifier – אם נמצא qualifier שאומר באיזו מבין כלל ה bean הקיימות לבחור אז זאת
התאמה, אחרת עוברים ל 3
3 .name – אם שם השדה או הפרמטר תואמים לשם של bean כלשהי והסוג מתאים אז זאת
התאמה. אחרת נזרקת שגיאה.

@Value - סימון שדה או פרמטר בבנאי או פרמטר במתודה שהם פרימיטיבים או סטרינג , ככזה שנרצה שפרינג תזריק - תבצי אלי השמה , מתוך ערך שנמסור לה כטקסט - בדרך כלל מתוך קובץ פרופרטיז


Spring Boot - no more deal with pom xml file!
Spring boot - הרחבה של ספרינג שמקלה על המתכנת בכל העיניינים של הקונפיגורציות
כשיוצרים פרוייקט ספרינג בוט אז הוא כבר מגיע עם כל הדיפנדנדסיס של ספרינג קור, אבל אם רוצים דיפנדנסיס נוספים אז מוסיפים אותם בזמן יצירת הפרוייקט
כל הדיפנדנסיס מותאמים מבחינת הגירסאות - ספרינג אינישיאלייזר יביא את הפום אקסאמל עם כל הדיפנדנסיס שצריך-חבילות לכל דבר בלי שום בעיה
קובץ הזיפ שיורד זה בעצם המייבן פרוגאקט
בפום אקאמאל יש כבר חבילות מוכנות 
spring boot starter - the core of spring and also some things spring boot needs for configuration
Maven-plug-in - we need it for the time we will want to send someone the project, to export the project in jar file

the Application class - @SringBootApplication - 
this class is a of two things we do until now , AppConfig - the configuration class , and the main method. 